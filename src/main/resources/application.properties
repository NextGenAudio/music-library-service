spring.application.name=music-library-service

# --- Primary Database ---
spring.datasource.primary.driver-class-name=org.postgresql.Driver
spring.datasource.primary.jdbc-url=${PRIMARY_DB_URL}
spring.datasource.primary.username=${PRIMARY_DB_USERNAME}
spring.datasource.primary.password=${PRIMARY_DB_PASSWORD}

# --- Secondary Database ---
spring.datasource.secondary.driver-class-name=org.postgresql.Driver
spring.datasource.secondary.jdbc-url=${SECONDARY_DB_URL}
spring.datasource.secondary.username=${SECONDARY_DB_USERNAME}
spring.datasource.secondary.password=${SECONDARY_DB_PASSWORD}

# --- JPA Common Config ---
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# --- HikariCP Connection Pool ---
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.connection-test-query=SELECT 1

# --- File Upload ---
spring.servlet.multipart.location=${TEMP_UPLOAD_DIR:/tmp/uploads}
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB

# --- Logging ---
logging.level.com.sonex.musiclibraryservice.security=DEBUG

# --- Kafka Common ---
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=AWS_MSK_IAM
spring.kafka.properties.sasl.jaas.config=software.amazon.msk.auth.iam.IAMLoginModule required;
spring.kafka.properties.sasl.client.callback.handler.class=software.amazon.msk.auth.iam.IAMClientCallbackHandler

# --- Kafka Producer ---
spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.producer.properties.security.protocol=SASL_SSL
spring.kafka.producer.properties.sasl.mechanism=AWS_MSK_IAM

# --- AWS Region ---
aws.region=${AWS_REGION:us-east-1}

# --- Kafka Consumer ---
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.type.mapping=genreResult:com.sonex.musiclibraryservice.model.GenreListnerEvent,moodResult:com.sonex.musiclibraryservice.model.MoodListnerEvent
spring.kafka.consumer.properties.security.protocol=SASL_SSL
spring.kafka.consumer.properties.sasl.mechanism=AWS_MSK_IAM